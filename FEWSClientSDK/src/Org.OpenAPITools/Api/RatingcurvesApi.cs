/*
 * Delft-FEWS Web Services REST API v1
 *
 * Delft-FEWS Web Services REST API v1. For more information see: https://publicwiki.deltares.nl/x/fwNdBw
 *
 * The version of the OpenAPI document: v1-2023-05-03T00:04:18Z
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRatingcurvesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds
        /// </summary>
        /// <remarks>
        /// Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestRatingcurves</returns>
        PiRestRatingcurves Ratingcurves(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds
        /// </summary>
        /// <remarks>
        /// Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestRatingcurves</returns>
        ApiResponse<PiRestRatingcurves> RatingcurvesWithHttpInfo(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestRatingcurvesStage</returns>
        PiRestRatingcurvesStage RatingcurvesDischargetostage(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0);

        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestRatingcurvesStage</returns>
        ApiResponse<PiRestRatingcurvesStage> RatingcurvesDischargetostageWithHttpInfo(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0);
        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestRatingcurvesDischarge</returns>
        PiRestRatingcurvesDischarge RatingcurvesStagetodischarge(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0);

        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestRatingcurvesDischarge</returns>
        ApiResponse<PiRestRatingcurvesDischarge> RatingcurvesStagetodischargeWithHttpInfo(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRatingcurvesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds
        /// </summary>
        /// <remarks>
        /// Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestRatingcurves</returns>
        System.Threading.Tasks.Task<PiRestRatingcurves> RatingcurvesAsync(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds
        /// </summary>
        /// <remarks>
        /// Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestRatingcurves)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestRatingcurves>> RatingcurvesWithHttpInfoAsync(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestRatingcurvesStage</returns>
        System.Threading.Tasks.Task<PiRestRatingcurvesStage> RatingcurvesDischargetostageAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestRatingcurvesStage)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestRatingcurvesStage>> RatingcurvesDischargetostageWithHttpInfoAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestRatingcurvesDischarge</returns>
        System.Threading.Tasks.Task<PiRestRatingcurvesDischarge> RatingcurvesStagetodischargeAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location
        /// </summary>
        /// <remarks>
        /// Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestRatingcurvesDischarge)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestRatingcurvesDischarge>> RatingcurvesStagetodischargeWithHttpInfoAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRatingcurvesApi : IRatingcurvesApiSync, IRatingcurvesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class RatingcurvesApi : IRatingcurvesApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="RatingcurvesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RatingcurvesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RatingcurvesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RatingcurvesApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RatingcurvesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public RatingcurvesApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RatingcurvesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public RatingcurvesApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestRatingcurves</returns>
        public PiRestRatingcurves Ratingcurves(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurves> localVarResponse = RatingcurvesWithHttpInfo(locationIds, onlyHeaders, documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestRatingcurves</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurves> RatingcurvesWithHttpInfo(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locationIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "locationIds", locationIds));
            }
            if (onlyHeaders != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "onlyHeaders", onlyHeaders));
            }
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "RatingcurvesApi.Ratingcurves";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PiRestRatingcurves>("/ratingcurves", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Ratingcurves", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestRatingcurves</returns>
        public async System.Threading.Tasks.Task<PiRestRatingcurves> RatingcurvesAsync(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurves> localVarResponse = await RatingcurvesWithHttpInfoAsync(locationIds, onlyHeaders, documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get all configured rating curves from the region config and optionally filter by locationIds Get all configured rating curves from the region config and optionally filter by locationIds. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationIds">One or more location ids (optional)</param>
        /// <param name="onlyHeaders">Toggle to return only rating curver headers (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestRatingcurves)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurves>> RatingcurvesWithHttpInfoAsync(List<string> locationIds = default(List<string>), string onlyHeaders = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (locationIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "locationIds", locationIds));
            }
            if (onlyHeaders != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "onlyHeaders", onlyHeaders));
            }
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "RatingcurvesApi.Ratingcurves";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PiRestRatingcurves>("/ratingcurves", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Ratingcurves", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestRatingcurvesStage</returns>
        public PiRestRatingcurvesStage RatingcurvesDischargetostage(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesStage> localVarResponse = RatingcurvesDischargetostageWithHttpInfo(locationId, documentFormat, documentVersion, dischargeValues);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestRatingcurvesStage</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesStage> RatingcurvesDischargetostageWithHttpInfo(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0)
        {
            // verify the required parameter 'locationId' is set
            if (locationId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'locationId' when calling RatingcurvesApi->RatingcurvesDischargetostage");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locationId", locationId));
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }
            if (dischargeValues != null)
            {
                localVarRequestOptions.FormParameters.Add("dischargeValues", Org.OpenAPITools.Client.ClientUtils.ParameterToString(dischargeValues)); // form parameter
            }

            localVarRequestOptions.Operation = "RatingcurvesApi.RatingcurvesDischargetostage";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PiRestRatingcurvesStage>("/ratingcurves/dischargetostage", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RatingcurvesDischargetostage", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestRatingcurvesStage</returns>
        public async System.Threading.Tasks.Task<PiRestRatingcurvesStage> RatingcurvesDischargetostageAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesStage> localVarResponse = await RatingcurvesDischargetostageWithHttpInfoAsync(locationId, documentFormat, documentVersion, dischargeValues, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Converts discharge values to stage values using a rating curve at a specific location Converts discharge values to stage values using a rating curve at a specific location. The dischargeValues should be passed in the body of the POST request as a key value pair where the key is dischargeValues and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_discharge.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="dischargeValues">Discharge values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_discharge.json. Example: {   \\\&quot;dischargeValues\\\&quot; : [ \\\&quot;9920.0\\\&quot;, \\\&quot;10200.0\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestRatingcurvesStage)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesStage>> RatingcurvesDischargetostageWithHttpInfoAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string dischargeValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'locationId' is set
            if (locationId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'locationId' when calling RatingcurvesApi->RatingcurvesDischargetostage");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locationId", locationId));
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }
            if (dischargeValues != null)
            {
                localVarRequestOptions.FormParameters.Add("dischargeValues", Org.OpenAPITools.Client.ClientUtils.ParameterToString(dischargeValues)); // form parameter
            }

            localVarRequestOptions.Operation = "RatingcurvesApi.RatingcurvesDischargetostage";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PiRestRatingcurvesStage>("/ratingcurves/dischargetostage", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RatingcurvesDischargetostage", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestRatingcurvesDischarge</returns>
        public PiRestRatingcurvesDischarge RatingcurvesStagetodischarge(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesDischarge> localVarResponse = RatingcurvesStagetodischargeWithHttpInfo(locationId, documentFormat, documentVersion, stageValues);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestRatingcurvesDischarge</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesDischarge> RatingcurvesStagetodischargeWithHttpInfo(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0)
        {
            // verify the required parameter 'locationId' is set
            if (locationId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'locationId' when calling RatingcurvesApi->RatingcurvesStagetodischarge");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locationId", locationId));
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }
            if (stageValues != null)
            {
                localVarRequestOptions.FormParameters.Add("stageValues", Org.OpenAPITools.Client.ClientUtils.ParameterToString(stageValues)); // form parameter
            }

            localVarRequestOptions.Operation = "RatingcurvesApi.RatingcurvesStagetodischarge";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PiRestRatingcurvesDischarge>("/ratingcurves/stagetodischarge", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RatingcurvesStagetodischarge", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestRatingcurvesDischarge</returns>
        public async System.Threading.Tasks.Task<PiRestRatingcurvesDischarge> RatingcurvesStagetodischargeAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesDischarge> localVarResponse = await RatingcurvesStagetodischargeWithHttpInfoAsync(locationId, documentFormat, documentVersion, stageValues, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Converts stage values to discharge values using a rating curve at a specific location Converts stage values to discharge values using a rating curve at a specific location. The stageValues should be passed in the body of the POST request as a key value pair where the key is dischargeValue and the value is URL Encoded JSON that conforms to the pi_rest_ratingcurves_stage.json schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Since 2022.02. Also available in readonly mode.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="locationId">Location id</param>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="stageValues">Stage values in JSON format that conforms to the schema: https://fewsdocs.deltares.nl/webservices/rest-api/v1/schemas/pirest/pi_rest_ratingcurves_stage.json. Example: {   \\\&quot;stageValues\\\&quot; : [ \\\&quot;22.1\\\&quot;, \\\&quot;22.2\\\&quot; ] } (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestRatingcurvesDischarge)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestRatingcurvesDischarge>> RatingcurvesStagetodischargeWithHttpInfoAsync(string locationId, string documentFormat = default(string), string documentVersion = default(string), string stageValues = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'locationId' is set
            if (locationId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'locationId' when calling RatingcurvesApi->RatingcurvesStagetodischarge");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "locationId", locationId));
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }
            if (stageValues != null)
            {
                localVarRequestOptions.FormParameters.Add("stageValues", Org.OpenAPITools.Client.ClientUtils.ParameterToString(stageValues)); // form parameter
            }

            localVarRequestOptions.Operation = "RatingcurvesApi.RatingcurvesStagetodischarge";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PiRestRatingcurvesDischarge>("/ratingcurves/stagetodischarge", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RatingcurvesStagetodischarge", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
