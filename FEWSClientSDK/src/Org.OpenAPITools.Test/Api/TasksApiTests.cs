/*
 * Delft-FEWS Web Services REST API v1
 *
 * Delft-FEWS Web Services REST API v1. For more information see: https://publicwiki.deltares.nl/x/fwNdBw
 *
 * The version of the OpenAPI document: v1-2023-05-03T00:04:18Z
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TasksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TasksApiTests : IDisposable
    {
        private TasksApi instance;

        public TasksApiTests()
        {
            instance = new TasksApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TasksApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TasksApi
            //Assert.IsType<TasksApi>(instance);
        }

        /// <summary>
        /// Test Moduleruntimes
        /// </summary>
        [Fact]
        public void ModuleruntimesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowId = null;
            //string documentFormat = null;
            //string documentVersion = null;
            //var response = instance.Moduleruntimes(workflowId, documentFormat, documentVersion);
            //Assert.IsType<PiRestModuleRunTimes>(response);
        }

        /// <summary>
        /// Test Postruntask
        /// </summary>
        [Fact]
        public void PostruntaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowId = null;
            //DateTime? startTime = null;
            //DateTime? endTime = null;
            //DateTime? timeZero = null;
            //string coldStateId = null;
            //string scenarioId = null;
            //string userId = null;
            //string description = null;
            //string runOption = null;
            //string piParametersXmlContent = null;
            //var response = instance.Postruntask(workflowId, startTime, endTime, timeZero, coldStateId, scenarioId, userId, description, runOption, piParametersXmlContent);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test Taskruns
        /// </summary>
        [Fact]
        public void TaskrunsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowId = null;
            //string whatIfId = null;
            //string mcId = null;
            //DateTime? startForecastTime = null;
            //DateTime? endForecastTime = null;
            //DateTime? startDispatchTime = null;
            //DateTime? endDispatchTime = null;
            //List<string> taskRunStatusIds = null;
            //string onlyForecasts = null;
            //string onlyCurrent = null;
            //string documentFormat = null;
            //string documentVersion = null;
            //var response = instance.Taskruns(workflowId, whatIfId, mcId, startForecastTime, endForecastTime, startDispatchTime, endDispatchTime, taskRunStatusIds, onlyForecasts, onlyCurrent, documentFormat, documentVersion);
            //Assert.IsType<PiRestTaskruns>(response);
        }

        /// <summary>
        /// Test Taskrunstatus
        /// </summary>
        [Fact]
        public void TaskrunstatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskId = null;
            //decimal? maxWaitMillis = null;
            //string documentFormat = null;
            //string documentVersion = null;
            //var response = instance.Taskrunstatus(taskId, maxWaitMillis, documentFormat, documentVersion);
            //Assert.IsType<PiRestTaskrunstatus>(response);
        }
    }
}
