/*
 * Delft-FEWS Web Services REST API v1
 *
 * Delft-FEWS Web Services REST API v1. For more information see: https://publicwiki.deltares.nl/x/fwNdBw
 *
 * The version of the OpenAPI document: v1-2023-05-03T00:04:18Z
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IEmbeddedApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestFiltersSelected</returns>
        PiRestFiltersSelected FiltersSelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestFiltersSelected</returns>
        ApiResponse<PiRestFiltersSelected> FiltersSelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>string</returns>
        string Lastupdatetime(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<string> LastupdatetimeWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestLocationsSelected</returns>
        PiRestLocationsSelected LocationsSelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestLocationsSelected</returns>
        ApiResponse<PiRestLocationsSelected> LocationsSelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestParametersSelected</returns>
        PiRestParametersSelected ParametersSelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestParametersSelected</returns>
        ApiResponse<PiRestParametersSelected> ParametersSelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        /// <summary>
        /// Get the time series for the selected topology node
        /// </summary>
        /// <remarks>
        /// Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestTimeseries</returns>
        PiRestTimeseries TimeseriesTopologyNode(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get the time series for the selected topology node
        /// </summary>
        /// <remarks>
        /// Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestTimeseries</returns>
        ApiResponse<PiRestTimeseries> TimeseriesTopologyNodeWithHttpInfo(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestTopologySelected</returns>
        PiRestTopologySelected TopologySelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);

        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestTopologySelected</returns>
        ApiResponse<PiRestTopologySelected> TopologySelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IEmbeddedApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestFiltersSelected</returns>
        System.Threading.Tasks.Task<PiRestFiltersSelected> FiltersSelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestFiltersSelected)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestFiltersSelected>> FiltersSelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<string> LastupdatetimeAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<string>> LastupdatetimeWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestLocationsSelected</returns>
        System.Threading.Tasks.Task<PiRestLocationsSelected> LocationsSelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestLocationsSelected)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestLocationsSelected>> LocationsSelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestParametersSelected</returns>
        System.Threading.Tasks.Task<PiRestParametersSelected> ParametersSelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestParametersSelected)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestParametersSelected>> ParametersSelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get the time series for the selected topology node
        /// </summary>
        /// <remarks>
        /// Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestTimeseries</returns>
        System.Threading.Tasks.Task<PiRestTimeseries> TimeseriesTopologyNodeAsync(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the time series for the selected topology node
        /// </summary>
        /// <remarks>
        /// Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestTimeseries)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestTimeseries>> TimeseriesTopologyNodeWithHttpInfoAsync(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestTopologySelected</returns>
        System.Threading.Tasks.Task<PiRestTopologySelected> TopologySelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone
        /// </summary>
        /// <remarks>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestTopologySelected)</returns>
        System.Threading.Tasks.Task<ApiResponse<PiRestTopologySelected>> TopologySelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IEmbeddedApi : IEmbeddedApiSync, IEmbeddedApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class EmbeddedApi : IEmbeddedApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="EmbeddedApi"/> class.
        /// </summary>
        /// <returns></returns>
        public EmbeddedApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EmbeddedApi"/> class.
        /// </summary>
        /// <returns></returns>
        public EmbeddedApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EmbeddedApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public EmbeddedApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EmbeddedApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public EmbeddedApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestFiltersSelected</returns>
        public PiRestFiltersSelected FiltersSelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestFiltersSelected> localVarResponse = FiltersSelectedWithHttpInfo(documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestFiltersSelected</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestFiltersSelected> FiltersSelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.FiltersSelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PiRestFiltersSelected>("/filters/selected", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("FiltersSelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestFiltersSelected</returns>
        public async System.Threading.Tasks.Task<PiRestFiltersSelected> FiltersSelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestFiltersSelected> localVarResponse = await FiltersSelectedWithHttpInfoAsync(documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected filter ids in the Operator Client or a Stand Alone Get the currently selected filter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestFiltersSelected)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestFiltersSelected>> FiltersSelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.FiltersSelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PiRestFiltersSelected>("/filters/selected", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("FiltersSelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>string</returns>
        public string Lastupdatetime(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<string> localVarResponse = LastupdatetimeWithHttpInfo(documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of string</returns>
        public Org.OpenAPITools.Client.ApiResponse<string> LastupdatetimeWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.Lastupdatetime";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<string>("/lastupdatetime", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Lastupdatetime", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<string> LastupdatetimeAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<string> localVarResponse = await LastupdatetimeWithHttpInfoAsync(documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the last time the timeseries were updated in the Operator Client or a Stand Alone Get the last time the timeseries were updated in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<string>> LastupdatetimeWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.Lastupdatetime";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<string>("/lastupdatetime", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Lastupdatetime", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestLocationsSelected</returns>
        public PiRestLocationsSelected LocationsSelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestLocationsSelected> localVarResponse = LocationsSelectedWithHttpInfo(documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestLocationsSelected</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestLocationsSelected> LocationsSelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.LocationsSelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PiRestLocationsSelected>("/locations/selected", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocationsSelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestLocationsSelected</returns>
        public async System.Threading.Tasks.Task<PiRestLocationsSelected> LocationsSelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestLocationsSelected> localVarResponse = await LocationsSelectedWithHttpInfoAsync(documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected location ids in the Operator Client or a Stand Alone Get the currently selected location ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestLocationsSelected)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestLocationsSelected>> LocationsSelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.LocationsSelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PiRestLocationsSelected>("/locations/selected", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocationsSelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestParametersSelected</returns>
        public PiRestParametersSelected ParametersSelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestParametersSelected> localVarResponse = ParametersSelectedWithHttpInfo(documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestParametersSelected</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestParametersSelected> ParametersSelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.ParametersSelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PiRestParametersSelected>("/parameters/selected", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ParametersSelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestParametersSelected</returns>
        public async System.Threading.Tasks.Task<PiRestParametersSelected> ParametersSelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestParametersSelected> localVarResponse = await ParametersSelectedWithHttpInfoAsync(documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected parameter ids in the Operator Client or a Stand Alone Get the currently selected parameter ids in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestParametersSelected)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestParametersSelected>> ParametersSelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.ParametersSelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PiRestParametersSelected>("/parameters/selected", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ParametersSelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the time series for the selected topology node Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestTimeseries</returns>
        public PiRestTimeseries TimeseriesTopologyNode(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestTimeseries> localVarResponse = TimeseriesTopologyNodeWithHttpInfo(topologyNodeId, timeZero, startTime, endTime, thresholdsVisible, omitMissing, useDisplayUnits, convertDatum, documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the time series for the selected topology node Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestTimeseries</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestTimeseries> TimeseriesTopologyNodeWithHttpInfo(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (topologyNodeId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "topologyNodeId", topologyNodeId));
            }
            if (timeZero != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "timeZero", timeZero));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }
            if (thresholdsVisible != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "thresholdsVisible", thresholdsVisible));
            }
            if (omitMissing != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "omitMissing", omitMissing));
            }
            if (useDisplayUnits != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "useDisplayUnits", useDisplayUnits));
            }
            if (convertDatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "convertDatum", convertDatum));
            }
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.TimeseriesTopologyNode";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PiRestTimeseries>("/timeseries/topology/node", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TimeseriesTopologyNode", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the time series for the selected topology node Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestTimeseries</returns>
        public async System.Threading.Tasks.Task<PiRestTimeseries> TimeseriesTopologyNodeAsync(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestTimeseries> localVarResponse = await TimeseriesTopologyNodeWithHttpInfoAsync(topologyNodeId, timeZero, startTime, endTime, thresholdsVisible, omitMissing, useDisplayUnits, convertDatum, documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the time series for the selected topology node Get the time series for the selected topology node. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="topologyNodeId">Id of the topology node for which the time series will be returned. (optional)</param>
        /// <param name="timeZero"> time zero in format: yyyy-MM-ddTHH:mm:ssZ (optional)</param>
        /// <param name="startTime">Optional startTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the start time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="endTime">Optional endTime for the requested period in format: yyyy-MM-ddTHH:mm:ssZ. If not set, the end time of the zoom period in the first time series dialog will be used. (optional)</param>
        /// <param name="thresholdsVisible">Set to true to make thresholds visible. (optional)</param>
        /// <param name="omitMissing">Toggle omitting or returning of missing values in response. Default is true (optional)</param>
        /// <param name="useDisplayUnits">Set to true to use display units (optional)</param>
        /// <param name="convertDatum">Set to true to convert datum (optional)</param>
        /// <param name="documentFormat">Supported Document Format: PI_XML, PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestTimeseries)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestTimeseries>> TimeseriesTopologyNodeWithHttpInfoAsync(string topologyNodeId = default(string), DateTime? timeZero = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), string thresholdsVisible = default(string), string omitMissing = default(string), string useDisplayUnits = default(string), string convertDatum = default(string), string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/xml",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (topologyNodeId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "topologyNodeId", topologyNodeId));
            }
            if (timeZero != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "timeZero", timeZero));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }
            if (thresholdsVisible != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "thresholdsVisible", thresholdsVisible));
            }
            if (omitMissing != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "omitMissing", omitMissing));
            }
            if (useDisplayUnits != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "useDisplayUnits", useDisplayUnits));
            }
            if (convertDatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "convertDatum", convertDatum));
            }
            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.TimeseriesTopologyNode";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PiRestTimeseries>("/timeseries/topology/node", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TimeseriesTopologyNode", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PiRestTopologySelected</returns>
        public PiRestTopologySelected TopologySelected(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestTopologySelected> localVarResponse = TopologySelectedWithHttpInfo(documentFormat, documentVersion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PiRestTopologySelected</returns>
        public Org.OpenAPITools.Client.ApiResponse<PiRestTopologySelected> TopologySelectedWithHttpInfo(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.TopologySelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PiRestTopologySelected>("/topology/selected", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TopologySelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PiRestTopologySelected</returns>
        public async System.Threading.Tasks.Task<PiRestTopologySelected> TopologySelectedAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<PiRestTopologySelected> localVarResponse = await TopologySelectedWithHttpInfoAsync(documentFormat, documentVersion, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the currently selected topology node id in the Operator Client or a Stand Alone Get the currently selected topology node id in the Operator Client or a Stand Alone. Only supported when running as a embedded tomcat service in the Operator Client or in a Stand Alone. Since 2022.02
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentFormat">Supported Document Format: PI_JSON,  (optional)</param>
        /// <param name="documentVersion">Document Version. Latest version is: 1.33 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PiRestTopologySelected)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PiRestTopologySelected>> TopologySelectedWithHttpInfoAsync(string documentFormat = default(string), string documentVersion = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "plain/text"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (documentFormat != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentFormat", documentFormat));
            }
            if (documentVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "documentVersion", documentVersion));
            }

            localVarRequestOptions.Operation = "EmbeddedApi.TopologySelected";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PiRestTopologySelected>("/topology/selected", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TopologySelected", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
